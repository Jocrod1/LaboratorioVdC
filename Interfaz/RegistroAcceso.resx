<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>